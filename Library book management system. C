#include <stdio.h>
#include <string.h>

#define MAX_BOOKS 100
#define MAX_TITLE 100
#define MAX_AUTHOR 100

// Structure for storing book details
struct Book {
    char title[MAX_TITLE];
    char author[MAX_AUTHOR];
    int id;
};

// Function prototypes
void add_book(struct Book library[], int *count);
void search_book(struct Book library[], int count);
void delete_book(struct Book library[], int *count);
void list_books(struct Book library[], int count);

int main() {
    struct Book library[MAX_BOOKS];  // Array to store books
    int count = 0;  // Number of books in the library
    int choice;

    while (1) {
        printf("\nLibrary Book Management System\n");
        printf("1. Add a Book\n");
        printf("2. Search for a Book\n");
        printf("3. Delete a Book\n");
        printf("4. List All Books\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                add_book(library, &count);
                break;
            case 2:
                search_book(library, count);
                break;
            case 3:
                delete_book(library, &count);
                break;
            case 4:
                list_books(library, count);
                break;
            case 5:
                printf("Exiting the program...\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}

// Function to add a new book to the library
void add_book(struct Book library[], int *count) {
    if (*count < MAX_BOOKS) {
        printf("\nEnter book title: ");
        getchar();  // Consume newline character left by previous input
        fgets(library[*count].title, MAX_TITLE, stdin);
        library[*count].title[strcspn(library[*count].title, "\n")] = '\0';  // Remove trailing newline
        
        printf("Enter book author: ");
        fgets(library[*count].author, MAX_AUTHOR, stdin);
        library[*count].author[strcspn(library[*count].author, "\n")] = '\0';  // Remove trailing newline

        library[*count].id = *count + 1;  // Assign unique ID starting from 1
        (*count)++;
        printf("Book added successfully!\n");
    } else {
        printf("Library is full. Cannot add more books.\n");
    }
}

// Function to search for a book by title or author
void search_book(struct Book library[], int count) {
    char search_term[MAX_TITLE];
    int found = 0;

    printf("\nEnter book title or author to search: ");
    getchar();  // Consume newline character left by previous input
    fgets(search_term, MAX_TITLE, stdin);
    search_term[strcspn(search_term, "\n")] = '\0';  // Remove trailing newline

    for (int i = 0; i < count; i++) {
        if (strstr(library[i].title, search_term) != NULL || strstr(library[i].author, search_term) != NULL) {
            printf("Book ID: %d\n", library[i].id);
            printf("Title: %s\n", library[i].title);
            printf("Author: %s\n\n", library[i].author);
            found = 1;
        }
    }

    if (!found) {
        printf("No books found matching the search term.\n");
    }
}

// Function to delete a book by title
void delete_book(struct Book library[], int *count) {
    char title[MAX_TITLE];
    int found = 0;

    printf("\nEnter book title to delete: ");
    getchar();  // Consume newline character left by previous input
    fgets(title, MAX_TITLE, stdin);
    title[strcspn(title, "\n")] = '\0';  // Remove trailing newline

    for (int i = 0; i < *count; i++) {
        if (strcmp(library[i].title, title) == 0) {
            // Shift the books after the deleted book
            for (int j = i; j < *count - 1; j++) {
                library[j] = library[j + 1];
            }
            (*count)--;
            printf("Book deleted successfully.\n");
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Book not found.\n");
    }
}

// Function to list all books in the library
void list_books(struct Book library[], int count) {
    if (count == 0) {
        printf("No books available in the library.\n");
    } else {
        printf("\nLibrary Books:\n");
        for (int i = 0; i < count; i++) {
            printf("Book ID: %d\n", library[i].id);
            printf("Title: %s\n", library[i].title);
            printf("Author: %s\n\n", library[i].author);
        }
    }
}
